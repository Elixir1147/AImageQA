{
  "id": "508d078c-b7e4-49d3-aa4a-8b0c36a35f9f",
  "prevId": "194037a0-483d-410a-9d93-e7ce83de621f",
  "version": "5",
  "dialect": "pg",
  "tables": {
    "answer": {
      "name": "answer",
      "schema": "",
      "columns": {
        "answer_id": {
          "name": "answer_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "post_date": {
          "name": "post_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_date": {
          "name": "updated_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "answer_question_id_question_question_id_fk": {
          "name": "answer_question_id_question_question_id_fk",
          "tableFrom": "answer",
          "tableTo": "question",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "question_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer_user_name_user_user_name_fk": {
          "name": "answer_user_name_user_user_name_fk",
          "tableFrom": "answer",
          "tableTo": "user",
          "columnsFrom": [
            "user_name"
          ],
          "columnsTo": [
            "user_name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "bookMark": {
      "name": "bookMark",
      "schema": "",
      "columns": {
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "questionId": {
          "name": "questionId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bookMark_user_name_user_user_name_fk": {
          "name": "bookMark_user_name_user_user_name_fk",
          "tableFrom": "bookMark",
          "tableTo": "user",
          "columnsFrom": [
            "user_name"
          ],
          "columnsTo": [
            "user_name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "bookMark_questionId_question_question_id_fk": {
          "name": "bookMark_questionId_question_question_id_fk",
          "tableFrom": "bookMark",
          "tableTo": "question",
          "columnsFrom": [
            "questionId"
          ],
          "columnsTo": [
            "question_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "bookMark_user_name_questionId_pk": {
          "name": "bookMark_user_name_questionId_pk",
          "columns": [
            "user_name",
            "questionId"
          ]
        },
        "bookMark_pk_table": {
          "name": "bookMark_pk_table",
          "columns": [
            "user_name",
            "questionId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "comment": {
      "name": "comment",
      "schema": "",
      "columns": {
        "comment_id": {
          "name": "comment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "answer_id": {
          "name": "answer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "comment_date": {
          "name": "comment_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_date": {
          "name": "updated_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "comment_user_name_user_user_name_fk": {
          "name": "comment_user_name_user_user_name_fk",
          "tableFrom": "comment",
          "tableTo": "user",
          "columnsFrom": [
            "user_name"
          ],
          "columnsTo": [
            "user_name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "comment_user_name_answer_id_pk": {
          "name": "comment_user_name_answer_id_pk",
          "columns": [
            "user_name",
            "answer_id"
          ]
        },
        "comment_pk_table": {
          "name": "comment_pk_table",
          "columns": [
            "user_name",
            "answer_id"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "evaluation": {
      "name": "evaluation",
      "schema": "",
      "columns": {
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "answer_id": {
          "name": "answer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "evaluation": {
          "name": "evaluation",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "evaluation_user_name_user_user_name_fk": {
          "name": "evaluation_user_name_user_user_name_fk",
          "tableFrom": "evaluation",
          "tableTo": "user",
          "columnsFrom": [
            "user_name"
          ],
          "columnsTo": [
            "user_name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "evaluation_user_name_answer_id_pk": {
          "name": "evaluation_user_name_answer_id_pk",
          "columns": [
            "user_name",
            "answer_id"
          ]
        },
        "evaluation_pk_table": {
          "name": "evaluation_pk_table",
          "columns": [
            "user_name",
            "answer_id"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "question": {
      "name": "question",
      "schema": "",
      "columns": {
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "view_number": {
          "name": "view_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "restricted": {
          "name": "restricted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "post_date": {
          "name": "post_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_date": {
          "name": "updated_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "question_user_name_user_user_name_fk": {
          "name": "question_user_name_user_user_name_fk",
          "tableFrom": "question",
          "tableTo": "user",
          "columnsFrom": [
            "user_name"
          ],
          "columnsTo": [
            "user_name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "question_title_unique": {
          "name": "question_title_unique",
          "nullsNotDistinct": false,
          "columns": [
            "title"
          ]
        }
      }
    },
    "questionToTag": {
      "name": "questionToTag",
      "schema": "",
      "columns": {
        "questionId": {
          "name": "questionId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tag_id": {
          "name": "tag_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "questionToTag_questionId_question_question_id_fk": {
          "name": "questionToTag_questionId_question_question_id_fk",
          "tableFrom": "questionToTag",
          "tableTo": "question",
          "columnsFrom": [
            "questionId"
          ],
          "columnsTo": [
            "question_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "questionToTag_tag_id_tag_tag_id_fk": {
          "name": "questionToTag_tag_id_tag_tag_id_fk",
          "tableFrom": "questionToTag",
          "tableTo": "tag",
          "columnsFrom": [
            "tag_id"
          ],
          "columnsTo": [
            "tag_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "questionToTag_questionId_tag_id_pk": {
          "name": "questionToTag_questionId_tag_id_pk",
          "columns": [
            "questionId",
            "tag_id"
          ]
        },
        "question_to_tag_pk_table": {
          "name": "question_to_tag_pk_table",
          "columns": [
            "questionId",
            "tag_id"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "session": {
      "name": "session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_user_id_user_id_fk": {
          "name": "session_user_id_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "tag": {
      "name": "tag",
      "schema": "",
      "columns": {
        "tag_id": {
          "name": "tag_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "tag_name_unique": {
          "name": "tag_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      }
    },
    "user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "mail_address": {
          "name": "mail_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "hashed_password": {
          "name": "hashed_password",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "profile": {
          "name": "profile",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        },
        "alive": {
          "name": "alive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_user_name_unique": {
          "name": "user_user_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "user_name"
          ]
        },
        "user_mail_address_unique": {
          "name": "user_mail_address_unique",
          "nullsNotDistinct": false,
          "columns": [
            "mail_address"
          ]
        }
      }
    }
  },
  "enums": {},
  "schemas": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}